{"ast":null,"code":"var _jsxFileName = \"/Users/hudamukhtar/Desktop/Huda/src/components/blog/blog-tag/index.jsx\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { flatDeep, slugify, containsObject } from \"../../../utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BlogTag = ({\n  data\n}) => {\n  const tags = data.map(item => {\n    return item.tags;\n  });\n  let singleTagArray = flatDeep(tags);\n  let allTags = [];\n  singleTagArray.forEach(tag => {\n    const obj = {\n      title: tag.trim(),\n      slug: slugify(tag)\n    };\n    const objIndex = containsObject(obj, allTags);\n\n    if (objIndex !== -1) {\n      allTags[objIndex] = {\n        title: tag.trim(),\n        slug: slugify(tag)\n      };\n    } else {\n      allTags.push(obj);\n    }\n  });\n  console.log(allTags);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post-tags\",\n    children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n      className: \"label\",\n      children: \"Tags :\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"tags\",\n      children: allTags.map((single, i) => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: process.env.PUBLIC_URL + `/tag/${single.slug}`,\n            children: single.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 29\n          }, this)\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n\n_c = BlogTag;\nBlogTag.propTypes = {\n  data: PropTypes.array\n};\nexport default BlogTag;\n\nvar _c;\n\n$RefreshReg$(_c, \"BlogTag\");","map":{"version":3,"sources":["/Users/hudamukhtar/Desktop/Huda/src/components/blog/blog-tag/index.jsx"],"names":["Link","PropTypes","flatDeep","slugify","containsObject","BlogTag","data","tags","map","item","singleTagArray","allTags","forEach","tag","obj","title","trim","slug","objIndex","push","console","log","single","i","process","env","PUBLIC_URL","propTypes","array"],"mappings":";AAAA,SAASA,IAAT,QAAqB,kBAArB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,QAAT,EAAmBC,OAAnB,EAA4BC,cAA5B,QAAkD,gBAAlD;;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAC1B,QAAMC,IAAI,GAAGD,IAAI,CAACE,GAAL,CAAUC,IAAD,IAAU;AAC5B,WAAOA,IAAI,CAACF,IAAZ;AACH,GAFY,CAAb;AAGA,MAAIG,cAAc,GAAGR,QAAQ,CAACK,IAAD,CAA7B;AACA,MAAII,OAAO,GAAG,EAAd;AACAD,EAAAA,cAAc,CAACE,OAAf,CAAwBC,GAAD,IAAS;AAC5B,UAAMC,GAAG,GAAG;AACRC,MAAAA,KAAK,EAAEF,GAAG,CAACG,IAAJ,EADC;AAERC,MAAAA,IAAI,EAAEd,OAAO,CAACU,GAAD;AAFL,KAAZ;AAIA,UAAMK,QAAQ,GAAGd,cAAc,CAACU,GAAD,EAAMH,OAAN,CAA/B;;AACA,QAAIO,QAAQ,KAAK,CAAC,CAAlB,EAAqB;AACjBP,MAAAA,OAAO,CAACO,QAAD,CAAP,GAAoB;AAChBH,QAAAA,KAAK,EAAEF,GAAG,CAACG,IAAJ,EADS;AAEhBC,QAAAA,IAAI,EAAEd,OAAO,CAACU,GAAD;AAFG,OAApB;AAIH,KALD,MAKO;AACHF,MAAAA,OAAO,CAACQ,IAAR,CAAaL,GAAb;AACH;AACJ,GAdD;AAeAM,EAAAA,OAAO,CAACC,GAAR,CAAYV,OAAZ;AACA,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACI;AAAI,MAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAI,MAAA,SAAS,EAAC,MAAd;AAAA,gBACKA,OAAO,CAACH,GAAR,CAAY,CAACc,MAAD,EAASC,CAAT,KAAe;AACxB,4BACI;AAAA,iCACI,QAAC,IAAD;AACI,YAAA,EAAE,EACEC,OAAO,CAACC,GAAR,CAAYC,UAAZ,GACC,QAAOJ,MAAM,CAACL,IAAK,EAH5B;AAAA,sBAMKK,MAAM,CAACP;AANZ;AAAA;AAAA;AAAA;AAAA;AADJ,WAASQ,CAAT;AAAA;AAAA;AAAA;AAAA,gBADJ;AAYH,OAbA;AADL;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAqBH,CA3CD;;KAAMlB,O;AA6CNA,OAAO,CAACsB,SAAR,GAAoB;AAChBrB,EAAAA,IAAI,EAAEL,SAAS,CAAC2B;AADA,CAApB;AAIA,eAAevB,OAAf","sourcesContent":["import { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { flatDeep, slugify, containsObject } from \"../../../utils\";\n\nconst BlogTag = ({ data }) => {\n    const tags = data.map((item) => {\n        return item.tags;\n    });\n    let singleTagArray = flatDeep(tags);\n    let allTags = [];\n    singleTagArray.forEach((tag) => {\n        const obj = {\n            title: tag.trim(),\n            slug: slugify(tag),\n        };\n        const objIndex = containsObject(obj, allTags);\n        if (objIndex !== -1) {\n            allTags[objIndex] = {\n                title: tag.trim(),\n                slug: slugify(tag),\n            };\n        } else {\n            allTags.push(obj);\n        }\n    });\n    console.log(allTags);\n    return (\n        <div className=\"post-tags\">\n            <h6 className=\"label\">Tags :</h6>\n            <ul className=\"tags\">\n                {allTags.map((single, i) => {\n                    return (\n                        <li key={i}>\n                            <Link\n                                to={\n                                    process.env.PUBLIC_URL +\n                                    `/tag/${single.slug}`\n                                }\n                            >\n                                {single.title}\n                            </Link>\n                        </li>\n                    );\n                })}\n            </ul>\n        </div>\n    );\n};\n\nBlogTag.propTypes = {\n    data: PropTypes.array,\n};\n\nexport default BlogTag;\n"]},"metadata":{},"sourceType":"module"}