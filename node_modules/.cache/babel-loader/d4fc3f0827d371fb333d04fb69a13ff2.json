{"ast":null,"code":"var _jsxFileName = \"/Users/hudamukhtar/Desktop/Huda/src/components/funfact/index.jsx\",\n    _s = $RefreshSig$();\n\nimport PropTypes from \"prop-types\";\nimport { useState } from \"react\";\nimport CountUp from \"react-countup\";\nimport VisibilitySensor from \"react-visibility-sensor\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Funfact = ({\n  data\n}) => {\n  _s();\n\n  const [didViewCountUp, setDidViewCountUp] = useState(false);\n\n  const onVisibilityChange = isVisible => {\n    if (isVisible) {\n      setDidViewCountUp(true);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"counter-box\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"counter-count\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"count odometer\",\n        children: /*#__PURE__*/_jsxDEV(VisibilitySensor, {\n          onChange: onVisibilityChange,\n          offset: {\n            top: 10\n          },\n          delayedCall: true,\n          children: /*#__PURE__*/_jsxDEV(CountUp, {\n            end: didViewCountUp ? data.number : 0\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"counter-content\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        dangerouslySetInnerHTML: {\n          __html: data.title\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Funfact, \"+Bd2ANvzfDepD05lRy3oH8yQNd0=\");\n\n_c = Funfact;\nFunfact.propTypes = {\n  data: PropTypes.object\n};\nexport default Funfact;\n\nvar _c;\n\n$RefreshReg$(_c, \"Funfact\");","map":{"version":3,"sources":["/Users/hudamukhtar/Desktop/Huda/src/components/funfact/index.jsx"],"names":["PropTypes","useState","CountUp","VisibilitySensor","Funfact","data","didViewCountUp","setDidViewCountUp","onVisibilityChange","isVisible","top","number","__html","title","propTypes","object"],"mappings":";;;AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,OAAOC,gBAAP,MAA6B,yBAA7B;;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAAA;;AAC1B,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCN,QAAQ,CAAC,KAAD,CAApD;;AAEA,QAAMO,kBAAkB,GAAIC,SAAD,IAAe;AACtC,QAAIA,SAAJ,EAAe;AACXF,MAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACH;AACJ,GAJD;;AAKA,sBACI;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,6BACI;AAAM,QAAA,SAAS,EAAC,gBAAhB;AAAA,+BACI,QAAC,gBAAD;AACI,UAAA,QAAQ,EAAEC,kBADd;AAEI,UAAA,MAAM,EAAE;AAAEE,YAAAA,GAAG,EAAE;AAAP,WAFZ;AAGI,UAAA,WAAW,MAHf;AAAA,iCAKI,QAAC,OAAD;AAAS,YAAA,GAAG,EAAEJ,cAAc,GAAGD,IAAI,CAACM,MAAR,GAAiB;AAA7C;AAAA;AAAA;AAAA;AAAA;AALJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAYI;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,6BACI;AAAG,QAAA,uBAAuB,EAAE;AAAEC,UAAAA,MAAM,EAAEP,IAAI,CAACQ;AAAf;AAA5B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAkBH,CA1BD;;GAAMT,O;;KAAAA,O;AA4BNA,OAAO,CAACU,SAAR,GAAoB;AAChBT,EAAAA,IAAI,EAAEL,SAAS,CAACe;AADA,CAApB;AAIA,eAAeX,OAAf","sourcesContent":["import PropTypes from \"prop-types\";\nimport { useState } from \"react\";\nimport CountUp from \"react-countup\";\nimport VisibilitySensor from \"react-visibility-sensor\";\n\nconst Funfact = ({ data }) => {\n    const [didViewCountUp, setDidViewCountUp] = useState(false);\n\n    const onVisibilityChange = (isVisible) => {\n        if (isVisible) {\n            setDidViewCountUp(true);\n        }\n    };\n    return (\n        <div className=\"counter-box\">\n            <div className=\"counter-count\">\n                <span className=\"count odometer\">\n                    <VisibilitySensor\n                        onChange={onVisibilityChange}\n                        offset={{ top: 10 }}\n                        delayedCall\n                    >\n                        <CountUp end={didViewCountUp ? data.number : 0} />\n                    </VisibilitySensor>\n                </span>\n            </div>\n            <div className=\"counter-content\">\n                <p dangerouslySetInnerHTML={{ __html: data.title }}></p>\n            </div>\n        </div>\n    );\n};\n\nFunfact.propTypes = {\n    data: PropTypes.object,\n};\n\nexport default Funfact;\n"]},"metadata":{},"sourceType":"module"}