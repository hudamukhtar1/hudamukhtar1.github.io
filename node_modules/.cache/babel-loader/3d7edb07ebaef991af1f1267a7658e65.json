{"ast":null,"code":"var _jsxFileName = \"/Users/hudamukhtar/Desktop/Huda/src/components/project-form/index.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProjectForm = () => {\n  _s();\n\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm({\n    mode: \"onBlur\"\n  });\n\n  const onSubmit = data => console.log(data);\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row gx-10\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-4\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"single-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"name\",\n            placeholder: \"Enter your name...\",\n            ref: register({\n              required: \"Name is required\"\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 14,\n            columnNumber: 25\n          }, this), errors.name && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: errors.name.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 41\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-4\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"single-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            name: \"email\",\n            placeholder: \"youemail@domain.com\",\n            ref: register({\n              required: \"Email is required\",\n              pattern: {\n                value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\n                message: \"invalid email address\"\n              }\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 25\n          }, this), errors.email && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: errors.email.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 42\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-4\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"single-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"subject\",\n            placeholder: \"Subject\",\n            ref: register({\n              required: \"Subject is required\"\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 25\n          }, this), errors.subject && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: errors.subject.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 44\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-12\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"single-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n            name: \"message\",\n            placeholder: \"Here goes your message\",\n            ref: register({\n              required: \"Message is required\"\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this), errors.message && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: errors.message.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 44\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ProjectForm, \"iyH731LTjAbxnbpM16EGorBPneQ=\", false, function () {\n  return [useForm];\n});\n\n_c = ProjectForm;\nexport default ProjectForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProjectForm\");","map":{"version":3,"sources":["/Users/hudamukhtar/Desktop/Huda/src/components/project-form/index.jsx"],"names":["React","useForm","ProjectForm","register","handleSubmit","errors","mode","onSubmit","data","console","log","required","name","message","pattern","value","email","subject"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useForm } from \"react-hook-form\";\n\nconst ProjectForm = () => {\n    const { register, handleSubmit, errors } = useForm({\n        mode: \"onBlur\",\n    });\n    const onSubmit = (data) => console.log(data);\n    return (\n        <form onSubmit={handleSubmit(onSubmit)}>\n            <div className=\"row gx-10\">\n                <div className=\"col-md-4\">\n                    <div className=\"single-form\">\n                        <input\n                            type=\"text\"\n                            name=\"name\"\n                            placeholder=\"Enter your name...\"\n                            ref={register({ required: \"Name is required\" })}\n                        />\n                        {errors.name && <p>{errors.name.message}</p>}\n                    </div>\n                </div>\n                <div className=\"col-md-4\">\n                    <div className=\"single-form\">\n                        <input\n                            type=\"email\"\n                            name=\"email\"\n                            placeholder=\"youemail@domain.com\"\n                            ref={register({\n                                required: \"Email is required\",\n                                pattern: {\n                                    value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\n                                    message: \"invalid email address\",\n                                },\n                            })}\n                        />\n                        {errors.email && <p>{errors.email.message}</p>}\n                    </div>\n                </div>\n                <div className=\"col-md-4\">\n                    <div className=\"single-form\">\n                        <input\n                            type=\"text\"\n                            name=\"subject\"\n                            placeholder=\"Subject\"\n                            ref={register({ required: \"Subject is required\" })}\n                        />\n                        {errors.subject && <p>{errors.subject.message}</p>}\n                    </div>\n                </div>\n                <div className=\"col-md-12\">\n                    <div className=\"single-form\">\n                        <textarea\n                            name=\"message\"\n                            placeholder=\"Here goes your message\"\n                            ref={register({ required: \"Message is required\" })}\n                        ></textarea>\n                        {errors.message && <p>{errors.message.message}</p>}\n                    </div>\n                </div>\n            </div>\n        </form>\n    );\n};\n\nexport default ProjectForm;\n"]},"metadata":{},"sourceType":"module"}